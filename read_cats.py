import numpy as np
from collections import namedtuple

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ FLUX CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def read_sexcat(name):
    '''
    Reads an ascii catalog from sextractor into an named tuple.
    '''
    fopen = open(name, 'r')
    lines = fopen.readlines()
    fopen.close()

    i, colnames = 0, []
    while lines[i].split()[0] == '#':
        colnames.append(lines[i].split()[2].lower())
        i += 1

    sexcat = namedtuple('sexcat', colnames)
    return sexcat(*np.loadtxt(name, unpack=1))




# ['id','x','y','ra','dec','SEflags','min_weight','class_star','starflag','snrflag','use','f_F160W_tot','e_F160W_tot','rtot','totcor','f_B','f_H','f_Hl','f_Hs','f_I','f_J1','f_J2','f_J3','f_J','f_Ks2','f_Ks','f_NB118','f_NB209','f_R','f_U','f_V','f_Z','f_F125W','f_F160W','e_B','e_H','e_Hl','e_Hs','e_I','e_J1','e_J2','e_J3','e_J','e_Ks2','e_Ks','e_NB118','e_NB209','e_R','e_U','e_V','e_Z','e_F125W','e_F160W','w_B','w_H','w_Hl','w_Hs','w_I','w_J1','w_J2','w_J3','w_J','w_Ks2','w_Ks','w_NB118','w_NB209','w_R','w_U','w_V','w_Z','w_F125W','w_F160W','id_irac','f_CH1','e_CH1','f_CH2','e_CH2','f_CH3','e_CH3','f_CH4','e_CH4','diffspikeflag','starcontamflag','f_f160w_0.2','f_f160w_0.4','f_f160w_0.6','f_f160w_0.8','f_f160w_1.0','spuriousflag']
class cat_f160w_cdfs:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.min_weight, self.class_star, self.starflag = cat[:,6], cat[:,7], cat[:,8]
        self.snrflag, self.use, self.f_F160W_tot = cat[:,9], cat[:,10], cat[:,11]
        self.e_F160W_tot, self.rtot, self.totcor = cat[:,12], cat[:,13], cat[:,14]
        self.f_B, self.f_H, self.f_Hl = cat[:,15], cat[:,16], cat[:,17]
        self.f_Hs, self.f_I, self.f_J1 = cat[:,18], cat[:,19], cat[:,20]
        self.f_J2, self.f_J3, self.f_J = cat[:,21], cat[:,22], cat[:,23]
        self.f_Ks2, self.f_Ks, self.f_NB118 = cat[:,24], cat[:,25], cat[:,26]
        self.f_NB209, self.f_R, self.f_U = cat[:,27], cat[:,28], cat[:,29]
        self.f_V, self.f_Z, self.f_F125W = cat[:,30], cat[:,31], cat[:,32]
        self.f_F160W, self.e_B, self.e_H = cat[:,33], cat[:,34], cat[:,35]
        self.e_Hl, self.e_Hs, self.e_I = cat[:,36], cat[:,37], cat[:,38]
        self.e_J1, self.e_J2, self.e_J3 = cat[:,39], cat[:,40], cat[:,41]
        self.e_J, self.e_Ks2, self.e_Ks = cat[:,42], cat[:,43], cat[:,44]
        self.e_NB118, self.e_NB209, self.e_R = cat[:,45], cat[:,46], cat[:,47]
        self.e_U, self.e_V, self.e_Z = cat[:,48], cat[:,49], cat[:,50]
        self.e_F125W, self.e_F160W, self.w_B = cat[:,51], cat[:,52], cat[:,53]
        self.w_H, self.w_Hl, self.w_Hs = cat[:,54], cat[:,55], cat[:,56]
        self.w_I, self.w_J1, self.w_J2 = cat[:,57], cat[:,58], cat[:,59]
        self.w_J3, self.w_J, self.w_Ks2 = cat[:,60], cat[:,61], cat[:,62]
        self.w_Ks, self.w_NB118, self.w_NB209 = cat[:,63], cat[:,64], cat[:,65]
        self.w_R, self.w_U, self.w_V = cat[:,66], cat[:,67], cat[:,68]
        self.w_Z, self.w_F125W, self.w_F160W = cat[:,69], cat[:,70], cat[:,71]
        self.id_irac, self.f_CH1, self.e_CH1 = cat[:,72], cat[:,73], cat[:,74]
        self.f_CH2, self.e_CH2, self.f_CH3 = cat[:,75], cat[:,76], cat[:,77]
        self.e_CH3, self.f_CH4, self.e_CH4 = cat[:,78], cat[:,79], cat[:,80]
        self.diffspikeflag, self.starcontamflag = cat[:,81], cat[:,82]
        self.f_f160w_02, self.f_f160w_04, self.f_f160w_06 = cat[:,83], cat[:,84], cat[:,85]
        self.f_f160w_08, self.f_f160w_10, self.spuriousflag = cat[:,86], cat[:,87], cat[:,88]

        self.weights = np.array([ self.w_B, self.w_H, self.w_Hl, self.w_Hs, self.w_I, self.w_J1, self.w_J2, self.w_J3, self.w_J, self.w_Ks2, self.w_Ks, self.w_R, self.w_U, self.w_V, self.w_Z, self.w_F125W, self.w_F160W ])
        self.wmin = np.array( [ min(self.weights[:,i]) for i in range(len(self.weights[0])) ] )

        newuseinds = np.where( (self.w_J1>0.3) & (self.w_J2>0.3) & \
                               (self.w_J3>0.3) & (self.w_Hs>0.3) & \
                               (self.w_Hl>0.3) & (self.w_Ks>0.3) & \
                               (self.w_F160W>0.3) )[0]
        self.newuse = np.zeros(len(cat[:,0]))
        self.newuse[newuseinds] += 1

        self.filters = [ '_F160W_tot', '_B', '_H', '_Hl', '_Hs', '_I', '_J1', '_J2', '_J3', '_J', '_Ks2', '_Ks', \
                         '_NB118', '_NB209', '_R', '_U', '_V', '_Z', '_F125W', '_F160W', '_CH1', '_CH2', '_CH3', '_CH4' ]
        self.fluxes = [ self.f_F160W_tot, self.f_B, self.f_H, self.f_Hl, self.f_Hs, self.f_I, self.f_J1, self.f_J2, self.f_J3, \
                        self.f_J, self.f_Ks2, self.f_Ks, self.f_NB118, self.f_NB209, self.f_R, self.f_U, self.f_V, self.f_Z, \
                        self.f_F125W, self.f_F160W, self.f_CH1, self.f_CH2, self.f_CH3, self.f_CH4 ] 
        self.errors = [ self.e_F160W_tot, self.e_B, self.e_H, self.e_Hl, self.e_Hs, self.e_I, self.e_J1, self.e_J2, self.e_J3, \
                        self.e_J, self.e_Ks2, self.e_Ks, self.e_NB118, self.e_NB209, self.e_R, self.e_U, self.e_V, self.e_Z, \
                        self.e_F125W, self.e_F160W, self.e_CH1, self.e_CH2, self.e_CH3, self.e_CH4 ] 



# ['id','x','y','ra','dec','SEflags','min_weight','class_star','starflag','snrflag','use','f_F160W_tot','e_F160W_tot','rtot','totcor','f_B','f_G','f_Gp','f_Hl','f_Hs','f_IA427','f_IA464','f_IA484','f_IA505','f_IA527','f_IA574','f_IA624','f_IA679','f_IA709','f_IA738','f_IA767','f_IA827','f_I','f_Ip','f_J1','f_J2','f_J3','f_Ks2','f_Ks','f_NB118','f_NB209','f_R','f_Rp','f_U','f_V','f_Z','f_Zp','f_F125W','f_F160W','e_B','e_G','e_Gp','e_Hl','e_Hs','e_IA427','e_IA464','e_IA484','e_IA505','e_IA527','e_IA574','e_IA624','e_IA679','e_IA709','e_IA738','e_IA767','e_IA827','e_I','e_Ip','e_J1','e_J2','e_J3','e_Ks2','e_Ks','e_NB118','e_NB209','e_R','e_Rp','e_U','e_V','e_Z','e_Zp','e_F125W','e_F160W','w_B','w_G','w_Gp','w_Hl','w_Hs','w_IA427','w_IA464','w_IA484','w_IA505','w_IA527','w_IA574','w_IA624','w_IA679','w_IA709','w_IA738','w_IA767','w_IA827','w_I','w_Ip','w_J1','w_J2','w_J3','w_Ks2','w_Ks','w_NB118','w_NB209','w_R','w_Rp','w_U','w_V','w_Z','w_Zp','w_F125W','w_F160W','id_irac','f_CH1','e_CH1','f_CH2','e_CH2','f_CH3','e_CH3','f_CH4','e_CH4','diffspikeflag','starcontamflag','f_f160w_0.2','f_f160w_0.4','f_f160w_0.6','f_f160w_0.8','f_f160w_1.0','spuriousflag']
# [id,x,y,ra,dec,SEflags,min_weight,class_star,starflag,snrflag,use,f_F160W_tot,e_F160W_tot,rtot,totcor,f_B,f_G,f_Gp,f_Hl,f_Hs,f_IA427,f_IA464,f_IA484,f_IA505,f_IA527,f_IA574,f_IA624,f_IA679,f_IA709,f_IA738,f_IA767,f_IA827,f_I,f_Ip,f_J1,f_J2,f_J3,f_Ks2,f_Ks,f_NB118,f_NB209,f_R,f_Rp,f_U,f_V,f_Z,f_Zp,f_F125W,f_F160W,e_B,e_G,e_Gp,e_Hl,e_Hs,e_IA427,e_IA464,e_IA484,e_IA505,e_IA527,e_IA574,e_IA624,e_IA679,e_IA709,e_IA738,e_IA767,e_IA827,e_I,e_Ip,e_J1,e_J2,e_J3,e_Ks2,e_Ks,e_NB118,e_NB209,e_R,e_Rp,e_U,e_V,e_Z,e_Zp,e_F125W,e_F160W,w_B,w_G,w_Gp,w_Hl,w_Hs,w_IA427,w_IA464,w_IA484,w_IA505,w_IA527,w_IA574,w_IA624,w_IA679,w_IA709,w_IA738,w_IA767,w_IA827,w_I,w_Ip,w_J1,w_J2,w_J3,w_Ks2,w_Ks,w_NB118,w_NB209,w_R,w_Rp,w_U,w_V,w_Z,w_Zp,w_F125W,w_F160W,id_irac,f_CH1,e_CH1,f_CH2,e_CH2,f_CH3,e_CH3,f_CH4,e_CH4,diffspikeflag,starcontamflag,f_f160w_02,f_f160w_04,f_f160w_06,f_f160w_08,f_f160w_10,spuriousflag]
class cat_f160w_cosmos:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.min_weight, self.class_star, self.starflag = cat[:,6], cat[:,7], cat[:,8]
        self.snrflag, self.use, self.f_F160W_tot = cat[:,9], cat[:,10], cat[:,11]
        self.e_F160W_tot, self.rtot, self.totcor = cat[:,12], cat[:,13], cat[:,14]
        self.f_B, self.f_G, self.f_Gp = cat[:,15], cat[:,16], cat[:,17]
        self.f_Hl, self.f_Hs, self.f_IA427 = cat[:,18], cat[:,19], cat[:,20]
        self.f_IA464, self.f_IA484, self.f_IA505 = cat[:,21], cat[:,22], cat[:,23]
        self.f_IA527, self.f_IA574, self.f_IA624 = cat[:,24], cat[:,25], cat[:,26]
        self.f_IA679, self.f_IA709, self.f_IA738 = cat[:,27], cat[:,28], cat[:,29]
        self.f_IA767, self.f_IA827, self.f_I = cat[:,30], cat[:,31], cat[:,32]
        self.f_Ip, self.f_J1, self.f_J2 = cat[:,33], cat[:,34], cat[:,35]
        self.f_J3, self.f_Ks2, self.f_Ks = cat[:,36], cat[:,37], cat[:,38]
        self.f_NB118, self.f_NB209, self.f_R = cat[:,39], cat[:,40], cat[:,41]
        self.f_Rp, self.f_U, self.f_V = cat[:,42], cat[:,43], cat[:,44]
        self.f_Z, self.f_Zp, self.f_F125W = cat[:,45], cat[:,46], cat[:,47]
        self.f_F160W, self.e_B, self.e_G = cat[:,48], cat[:,49], cat[:,50]
        self.e_Gp, self.e_Hl, self.e_Hs = cat[:,51], cat[:,52], cat[:,53]
        self.e_IA427, self.e_IA464, self.e_IA484 = cat[:,54], cat[:,55], cat[:,56]
        self.e_IA505, self.e_IA527, self.e_IA574 = cat[:,57], cat[:,58], cat[:,59]
        self.e_IA624, self.e_IA679, self.e_IA709 = cat[:,60], cat[:,61], cat[:,62]
        self.e_IA738, self.e_IA767, self.e_IA827 = cat[:,63], cat[:,64], cat[:,65]
        self.e_I, self.e_Ip, self.e_J1 = cat[:,66], cat[:,67], cat[:,68]
        self.e_J2, self.e_J3, self.e_Ks2 = cat[:,69], cat[:,70], cat[:,71]
        self.e_Ks, self.e_NB118, self.e_NB209 = cat[:,72], cat[:,73], cat[:,74]
        self.e_R, self.e_Rp, self.e_U = cat[:,75], cat[:,76], cat[:,77]
        self.e_V, self.e_Z, self.e_Zp = cat[:,78], cat[:,79], cat[:,80]
        self.e_F125W, self.e_F160W, self.w_B = cat[:,81], cat[:,82], cat[:,83]
        self.w_G, self.w_Gp, self.w_Hl = cat[:,84], cat[:,85], cat[:,86]
        self.w_Hs, self.w_IA427, self.w_IA464 = cat[:,87], cat[:,88], cat[:,89]
        self.w_IA484, self.w_IA505, self.w_IA527 = cat[:,90], cat[:,91], cat[:,92]
        self.w_IA574, self.w_IA624, self.w_IA679 = cat[:,93], cat[:,94], cat[:,95]
        self.w_IA709, self.w_IA738, self.w_IA767 = cat[:,96], cat[:,97], cat[:,98]
        self.w_IA827, self.w_I, self.w_Ip = cat[:,99], cat[:,100], cat[:,101]
        self.w_J1, self.w_J2, self.w_J3 = cat[:,102], cat[:,103], cat[:,104]
        self.w_Ks2, self.w_Ks, self.w_NB118 = cat[:,105], cat[:,106], cat[:,107]
        self.w_NB209, self.w_R, self.w_Rp = cat[:,108], cat[:,109], cat[:,110]
        self.w_U, self.w_V, self.w_Z = cat[:,111], cat[:,112], cat[:,113]
        self.w_Zp, self.w_F125W, self.w_F160W = cat[:,114], cat[:,115], cat[:,116]
        self.id_irac, self.f_CH1, self.e_CH1 = cat[:,117], cat[:,118], cat[:,119]
        self.f_CH2, self.e_CH2, self.f_CH3 = cat[:,120], cat[:,121], cat[:,122]
        self.e_CH3, self.f_CH4, self.e_CH4 = cat[:,123], cat[:,124], cat[:,125]
        self.diffspikeflag, self.starcontamflag = cat[:,126], cat[:,127]
        self.f_f160w_02, self.f_f160w_04, self.f_f160w_06 = cat[:,128], cat[:,129], cat[:,130]
        self.f_f160w_08, self.f_f160w_10, self.spuriousflag = cat[:,131], cat[:,132], cat[:,133]

        self.weights =  np.array([ self.w_B, self.w_G, self.w_Gp, self.w_Hl, self.w_Hs, self.w_IA427, self.w_IA464, self.w_IA484, self.w_IA505, self.w_IA527, self.w_IA574, self.w_IA624, self.w_IA679, self.w_IA709, self.w_IA738, self.w_IA767, self.w_IA827, self.w_I, self.w_Ip, self.w_J1, self.w_J2, self.w_J3, self.w_Ks2, self.w_Ks, self.w_R, self.w_Rp, self.w_U, self.w_V, self.w_Z, self.w_Zp, self.w_F125W, self.w_F160W ])
        self.wmin = np.array( [ min(self.weights[:,i]) for i in range(len(self.weights[0])) ] )

        newuseinds = np.where( (self.w_J1>0.3) & (self.w_J2>0.3) & \
                               (self.w_J3>0.3) & (self.w_Hs>0.3) & \
                               (self.w_Hl>0.3) & (self.w_Ks>0.3) & \
                               (self.w_F160W>0.3) )[0]
        self.newuse = np.zeros(len(cat[:,0]))
        self.newuse[newuseinds] += 1

        self.filters = [ '_F160W_tot', '_B', '_G', '_Gp', '_Hl', '_Hs', '_IA427', '_IA464', '_IA484', '_IA505', '_IA527', \
                         '_IA574', '_IA624', '_IA679', '_IA709', '_IA738', '_IA767', '_IA827', '_I', '_Ip', '_J1', '_J2', \
                         '_J3', '_Ks2', '_Ks', '_NB118', '_NB209', '_R', '_Rp', '_U', '_V', '_Z', '_Zp', '_F125W', '_F160W', \
                         '_CH1', '_CH2', '_CH3', '_CH4' ]
        self.fluxes = [ self.f_F160W_tot, self.f_B, self.f_G, self.f_Gp, self.f_Hl, self.f_Hs, self.f_IA427, self.f_IA464, self.f_IA484, \
                        self.f_IA505, self.f_IA527, self.f_IA574, self.f_IA624, self.f_IA679, self.f_IA709, self.f_IA738, self.f_IA767, \
                        self.f_IA827, self.f_I, self.f_Ip, self.f_J1, self.f_J2, self.f_J3, self.f_Ks2, self.f_Ks, self.f_NB118, \
                        self.f_NB209, self.f_R, self.f_Rp, self.f_U, self.f_V, self.f_Z, self.f_Zp, self.f_F125W, self.f_F160W, \
                        self.f_CH1, self.f_CH2, self.f_CH3, self.f_CH4 ]
        self.errors = [ self.e_F160W_tot, self.e_B, self.e_G, self.e_Gp, self.e_Hl, self.e_Hs, self.e_IA427, self.e_IA464, self.e_IA484, \
                        self.e_IA505, self.e_IA527, self.e_IA574, self.e_IA624, self.e_IA679, self.e_IA709, self.e_IA738, self.e_IA767, \
                        self.e_IA827, self.e_I, self.e_Ip, self.e_J1, self.e_J2, self.e_J3, self.e_Ks2, self.e_Ks, self.e_NB118, \
                        self.e_NB209, self.e_R, self.e_Rp, self.e_U, self.e_V, self.e_Z, self.e_Zp, self.e_F125W, self.e_F160W, \
                        self.e_CH1, self.e_CH2, self.e_CH3, self.e_CH4 ]





# ['id','x','y','ra','dec','SEflags','min_weight','class_star','starflag','snrflag','use','f_F160W_tot','e_F160W_tot','rtot','totcor','f_B','f_F125W','f_F160W','f_H','f_Hl','f_Hs','f_J1','f_J2','f_J3','f_J','f_K','f_Ks','f_R','f_V','f_i','f_u','f_z','e_B','e_F125W','e_F160W','e_H','e_Hl','e_Hs','e_J1','e_J2','e_J3','e_J','e_K','e_Ks','e_R','e_V','e_i','e_u','e_z','w_B','w_F125W','w_F160W','w_H','w_Hl','w_Hs','w_J1','w_J2','w_J3','w_J','w_K','w_Ks','w_R','w_V','w_i','w_u','w_z','id_irac','f_CH1','e_CH1','f_CH2','e_CH2','f_CH3','e_CH3','f_CH4','e_CH4','diffspikeflag','starcontamflag','f_f160w_0.2','f_f160w_0.4','f_f160w_0.6','f_f160w_0.8','f_f160w_1.0','spuriousflag']
class cat_f160w_uds:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.min_weight, self.class_star, self.starflag = cat[:,6], cat[:,7], cat[:,8]
        self.snrflag, self.use, self.f_F160W_tot = cat[:,9], cat[:,10], cat[:,11]
        self.e_F160W_tot, self.rtot, self.totcor = cat[:,12], cat[:,13], cat[:,14]
        self.f_B, self.f_F125W, self.f_F160W = cat[:,15], cat[:,16], cat[:,17]
        self.f_H, self.f_Hl, self.f_Hs = cat[:,18], cat[:,19], cat[:,20]
        self.f_J1, self.f_J2, self.f_J3 = cat[:,21], cat[:,22], cat[:,23]
        self.f_J, self.f_K, self.f_Ks = cat[:,24], cat[:,25], cat[:,26]
        self.f_R, self.f_V, self.f_i = cat[:,27], cat[:,28], cat[:,29]
        self.f_u, self.f_z, self.e_B = cat[:,30], cat[:,31], cat[:,32]
        self.e_F125W, self.e_F160W, self.e_H = cat[:,33], cat[:,34], cat[:,35]
        self.e_Hl, self.e_Hs, self.e_J1 = cat[:,36], cat[:,37], cat[:,38]
        self.e_J2, self.e_J3, self.e_J = cat[:,39], cat[:,40], cat[:,41]
        self.e_K, self.e_Ks, self.e_R = cat[:,42], cat[:,43], cat[:,44]
        self.e_V, self.e_i, self.e_u = cat[:,45], cat[:,46], cat[:,47]
        self.e_z, self.w_B, self.w_F125W = cat[:,48], cat[:,49], cat[:,50]
        self.w_F160W, self.w_H, self.w_Hl = cat[:,51], cat[:,52], cat[:,53]
        self.w_Hs, self.w_J1, self.w_J2 = cat[:,54], cat[:,55], cat[:,56]
        self.w_J3, self.w_J, self.w_K = cat[:,57], cat[:,58], cat[:,59]
        self.w_Ks, self.w_R, self.w_V = cat[:,60], cat[:,61], cat[:,62]
        self.w_i, self.w_u, self.w_z = cat[:,63], cat[:,64], cat[:,65]
        self.id_irac, self.f_CH1, self.e_CH1 = cat[:,66], cat[:,67], cat[:,68]
        self.f_CH2, self.e_CH2, self.f_CH3 = cat[:,69], cat[:,70], cat[:,71]
        self.e_CH3, self.f_CH4, self.e_CH4 = cat[:,72], cat[:,73], cat[:,74]
        self.diffspikeflag, self.starcontamflag = cat[:,75], cat[:,76]
        self.f_f160w_02, self.f_f160w_04, self.f_f160w_06 = cat[:,77], cat[:,78], cat[:,79]
        self.f_f160w_08, self.f_f160w_10, self.spuriousflag = cat[:,80], cat[:,81], cat[:,82]
        newuseinds = np.where( (self.w_J1>0.3) & (self.w_J2>0.3) & \
                               (self.w_J3>0.3) & (self.w_Hs>0.3) & \
                               (self.w_Hl>0.3) & (self.w_Ks>0.3) & \
                               (self.w_F160W>0.3) )[0]
        self.newuse = np.zeros(len(cat[:,0]))
        self.newuse[newuseinds] += 1

        self.filters = [ '_F160W_tot', '_B', '_F125W', '_F160W', '_H', '_Hl', '_Hs', '_J1', '_J2', '_J3', '_J', \
                         '_K', '_Ks', '_R', '_V', '_i', '_u', '_z', '_CH1', '_CH2', '_CH3', '_CH4' ]
        self.fluxes = [ self.f_F160W_tot, self.f_B, self.f_F125W, self.f_F160W, self.f_H, self.f_Hl, self.f_Hs, self.f_J1, \
                        self.f_J2, self.f_J3, self.f_J, self.f_K, self.f_Ks, self.f_R, self.f_V, self.f_i, self.f_u, self.f_z, \
                        self.f_CH1, self.f_CH2, self.f_CH3, self.f_CH4 ]
        self.errors = [ self.e_F160W_tot, self.e_B, self.e_F125W, self.e_F160W, self.e_H, self.e_Hl, self.e_Hs, self.e_J1, \
                        self.e_J2, self.e_J3, self.e_J, self.e_K, self.e_Ks, self.e_R, self.e_V, self.e_i, self.e_u, self.e_z, \
                        self.e_CH1, self.e_CH2, self.e_CH3, self.e_CH4 ]



# ['id','x','y','ra','dec','SEflags','iso_area','Kstot','eKstot','ksauto','Ks_flux_radius','Ks_rkron_circ','Kstot07','eKstot07','apcorr','B','eB','wB','H','eH','wH','Hl','eHl','wHl','Hs','eHs','wHs','I','eI','wI','J','eJ','wJ','J1','eJ1','wJ1','J2','eJ2','wJ2','J3','eJ3','wJ3','Ks2','eKs2','wKs2','Ks_HI','eKs_HI','wKs_HI','Ks','eKs','wKs','NB118','eNB118','wNB118','NB209','eNB209','wNB209','R','eR','wR','U','eU','wU','V','eV','wV','Z','eZ','wZ','f_F125W','e_F125W','w_F125W','f_F160W','e_F160W','w_F160W','id_irac','CH1','eCH1','wCH1','CH2','eCH2','wCH2','CH3','eCH3','wCH3','CH4','eCH4','wCH4','wmin_optical','wmin_fs','wmin_jhk','wmin_hst','wmin_irac','wmin_all','starflag','nearstar','nearsource','snr','snrflag','use']
class cat_ks_cdfs_0_4_8:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot07, self.eKstot07, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.H, self.eH, self.wH = cat[:,18], cat[:,19], cat[:,20]
        self.Hl, self.eHl, self.wHl = cat[:,21], cat[:,22], cat[:,23]
        self.Hs, self.eHs, self.wHs = cat[:,24], cat[:,25], cat[:,26]
        self.I, self.eI, self.wI = cat[:,27], cat[:,28], cat[:,29]
        self.J, self.eJ, self.wJ = cat[:,30], cat[:,31], cat[:,32]
        self.J1, self.eJ1, self.wJ1 = cat[:,33], cat[:,34], cat[:,35]
        self.J2, self.eJ2, self.wJ2 = cat[:,36], cat[:,37], cat[:,38]
        self.J3, self.eJ3, self.wJ3 = cat[:,39], cat[:,40], cat[:,41]
        self.Ks2, self.eKs2, self.wKs2 = cat[:,42], cat[:,43], cat[:,44]
        self.Ks_HI, self.eKs_HI, self.wKs_HI = cat[:,45], cat[:,46], cat[:,47]
        self.Ks, self.eKs, self.wKs = cat[:,48], cat[:,49], cat[:,50]
        self.NB118, self.eNB118, self.wNB118 = cat[:,51], cat[:,52], cat[:,53]
        self.NB209, self.eNB209, self.wNB209 = cat[:,54], cat[:,55], cat[:,56]
        self.R, self.eR, self.wR = cat[:,57], cat[:,58], cat[:,59]
        self.U, self.eU, self.wU = cat[:,60], cat[:,61], cat[:,62]
        self.V, self.eV, self.wV = cat[:,63], cat[:,64], cat[:,65]
        self.Z, self.eZ, self.wZ = cat[:,66], cat[:,67], cat[:,68]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,69], cat[:,70], cat[:,71]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,72], cat[:,73], cat[:,74]
        self.id_irac, self.CH1, self.eCH1 = cat[:,75], cat[:,76], cat[:,77]
        self.wCH1, self.CH2, self.eCH2 = cat[:,78], cat[:,79], cat[:,80]
        self.wCH2, self.CH3, self.eCH3 = cat[:,81], cat[:,82], cat[:,83]
        self.wCH3, self.CH4, self.eCH4 = cat[:,84], cat[:,85], cat[:,86]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,87], cat[:,88], cat[:,89]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,90], cat[:,91], cat[:,92]
        self.wmin_all, self.starflag, self.nearstar = cat[:,93], cat[:,94], cat[:,95]
        self.nearsource, self.snr, self.snrflag = cat[:,96], cat[:,97], cat[:,98]
        self.use = cat[:,99]




class cat_ks_cdfs_0_4_8_FIR:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot07, self.eKstot07, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.H, self.eH, self.wH = cat[:,18], cat[:,19], cat[:,20]
        self.Hl, self.eHl, self.wHl = cat[:,21], cat[:,22], cat[:,23]
        self.Hs, self.eHs, self.wHs = cat[:,24], cat[:,25], cat[:,26]
        self.I, self.eI, self.wI = cat[:,27], cat[:,28], cat[:,29]
        self.J, self.eJ, self.wJ = cat[:,30], cat[:,31], cat[:,32]
        self.J1, self.eJ1, self.wJ1 = cat[:,33], cat[:,34], cat[:,35]
        self.J2, self.eJ2, self.wJ2 = cat[:,36], cat[:,37], cat[:,38]
        self.J3, self.eJ3, self.wJ3 = cat[:,39], cat[:,40], cat[:,41]
        self.Ks2, self.eKs2, self.wKs2 = cat[:,42], cat[:,43], cat[:,44]
        self.Ks_HI, self.eKs_HI, self.wKs_HI = cat[:,45], cat[:,46], cat[:,47]
        self.Ks, self.eKs, self.wKs = cat[:,48], cat[:,49], cat[:,50]
        self.NB118, self.eNB118, self.wNB118 = cat[:,51], cat[:,52], cat[:,53]
        self.NB209, self.eNB209, self.wNB209 = cat[:,54], cat[:,55], cat[:,56]
        self.R, self.eR, self.wR = cat[:,57], cat[:,58], cat[:,59]
        self.U, self.eU, self.wU = cat[:,60], cat[:,61], cat[:,62]
        self.V, self.eV, self.wV = cat[:,63], cat[:,64], cat[:,65]
        self.Z, self.eZ, self.wZ = cat[:,66], cat[:,67], cat[:,68]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,69], cat[:,70], cat[:,71]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,72], cat[:,73], cat[:,74]
        self.id_irac, self.CH1, self.eCH1 = cat[:,75], cat[:,76], cat[:,77]
        self.wCH1, self.CH2, self.eCH2 = cat[:,78], cat[:,79], cat[:,80]
        self.wCH2, self.CH3, self.eCH3 = cat[:,81], cat[:,82], cat[:,83]
        self.wCH3, self.CH4, self.eCH4 = cat[:,84], cat[:,85], cat[:,86]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,87], cat[:,88], cat[:,89]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,90], cat[:,91], cat[:,92]
        self.wmin_all, self.starflag, self.nearstar = cat[:,93], cat[:,94], cat[:,95]
        self.nearsource, self.snr, self.snrflag = cat[:,96], cat[:,97], cat[:,98]
        self.use = cat[:,99]
        self.f_mips24, self.e_mips24, self.contam_mips24, self.purity_mips24 = cat[:,100], cat[:,101], cat[:,102], cat[:,103]
        self.f_pacs70, self.e_pacs70, self.contam_pacs70, self.purity_pacs70 = cat[:,104], cat[:,105], cat[:,106], cat[:,107]
        self.f_pacs100, self.e_pacs100, self.contam_pacs100, self.purity_pacs100 = cat[:,108], cat[:,109], cat[:,110], cat[:,111]
        self.f_pacs160, self.e_pacs160, self.contam_pacs160, self.purity_pacs160 = cat[:,112], cat[:,113], cat[:,114], cat[:,115]
        self.f_fir = np.array( zip( self.f_mips24, self.f_pacs70, self.f_pacs100, self.f_pacs160 ) )
        self.e_fir = np.array( zip( self.e_mips24, self.e_pacs70, self.e_pacs100, self.e_pacs160 ) )


# ['id','x','y','ra','dec','SEflags','iso_area','Kstot','eKstot','ksauto','Ks_flux_radius','Ks_rkron_circ','Kstot07','eKstot07','apcorr','B','eB','wB','G','eG','wG','Gp','eGp','wGp','Hl','eHl','wHl','Hs','eHs','wHs','I','eI','wI','IA427','eIA427','wIA427','IA464','eIA464','wIA464','IA484','eIA484','wIA484','IA505','eIA505','wIA505','IA527','eIA527','wIA527','IA574','eIA574','wIA574','IA624','eIA624','wIA624','IA679','eIA679','wIA679','IA709','eIA709','wIA709','IA738','eIA738','wIA738','IA767','eIA767','wIA767','IA827','eIA827','wIA827','J1','eJ1','wJ1','J2','eJ2','wJ2','J3','eJ3','wJ3','Ks2','eKs2','wKs2','Ks','eKs','wKs','NB118','eNB118','wNB118','NB209','eNB209','wNB209','R','eR','wR','Rp','eRp','wRp','U','eU','wU','V','eV','wV','Z','eZ','wZ','Zp','eZp','wZp','f_F125W','e_F125W','w_F125W','f_F160W','e_F160W','w_F160W','id_irac','CH1','eCH1','wCH1','CH2','eCH2','wCH2','CH3','eCH3','wCH3','CH4','eCH4','wCH4','wmin_optical','wmin_fs','wmin_jhk','wmin_hst','wmin_irac','wmin_all','starflag','nearstar','nearsource','snr','snrflag','use']
class cat_ks_cosmos_0_10_7:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot07, self.eKstot07, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.G, self.eG, self.wG = cat[:,18], cat[:,19], cat[:,20]
        self.Gp, self.eGp, self.wGp = cat[:,21], cat[:,22], cat[:,23]
        self.Hl, self.eHl, self.wHl = cat[:,24], cat[:,25], cat[:,26]
        self.Hs, self.eHs, self.wHs = cat[:,27], cat[:,28], cat[:,29]
        self.I, self.eI, self.wI = cat[:,30], cat[:,31], cat[:,32]
        self.IA427, self.eIA427, self.wIA427 = cat[:,33], cat[:,34], cat[:,35]
        self.IA464, self.eIA464, self.wIA464 = cat[:,36], cat[:,37], cat[:,38]
        self.IA484, self.eIA484, self.wIA484 = cat[:,39], cat[:,40], cat[:,41]
        self.IA505, self.eIA505, self.wIA505 = cat[:,42], cat[:,43], cat[:,44]
        self.IA527, self.eIA527, self.wIA527 = cat[:,45], cat[:,46], cat[:,47]
        self.IA574, self.eIA574, self.wIA574 = cat[:,48], cat[:,49], cat[:,50]
        self.IA624, self.eIA624, self.wIA624 = cat[:,51], cat[:,52], cat[:,53]
        self.IA679, self.eIA679, self.wIA679 = cat[:,54], cat[:,55], cat[:,56]
        self.IA709, self.eIA709, self.wIA709 = cat[:,57], cat[:,58], cat[:,59]
        self.IA738, self.eIA738, self.wIA738 = cat[:,60], cat[:,61], cat[:,62]
        self.IA767, self.eIA767, self.wIA767 = cat[:,63], cat[:,64], cat[:,65]
        self.IA827, self.eIA827, self.wIA827 = cat[:,66], cat[:,67], cat[:,68]
        self.J1, self.eJ1, self.wJ1 = cat[:,69], cat[:,70], cat[:,71]
        self.J2, self.eJ2, self.wJ2 = cat[:,72], cat[:,73], cat[:,74]
        self.J3, self.eJ3, self.wJ3 = cat[:,75], cat[:,76], cat[:,77]
        self.Ks2, self.eKs2, self.wKs2 = cat[:,78], cat[:,79], cat[:,80]
        self.Ks, self.eKs, self.wKs = cat[:,81], cat[:,82], cat[:,83]
        self.NB118, self.eNB118, self.wNB118 = cat[:,84], cat[:,85], cat[:,86]
        self.NB209, self.eNB209, self.wNB209 = cat[:,87], cat[:,88], cat[:,89]
        self.R, self.eR, self.wR = cat[:,90], cat[:,91], cat[:,92]
        self.Rp, self.eRp, self.wRp = cat[:,93], cat[:,94], cat[:,95]
        self.U, self.eU, self.wU = cat[:,96], cat[:,97], cat[:,98]
        self.V, self.eV, self.wV = cat[:,99], cat[:,100], cat[:,101]
        self.Z, self.eZ, self.wZ = cat[:,102], cat[:,103], cat[:,104]
        self.Zp, self.eZp, self.wZp = cat[:,105], cat[:,106], cat[:,107]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,108], cat[:,109], cat[:,110]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,111], cat[:,112], cat[:,113]
        self.id_irac, self.CH1, self.eCH1 = cat[:,114], cat[:,115], cat[:,116]
        self.wCH1, self.CH2, self.eCH2 = cat[:,117], cat[:,118], cat[:,119]
        self.wCH2, self.CH3, self.eCH3 = cat[:,120], cat[:,121], cat[:,122]
        self.wCH3, self.CH4, self.eCH4 = cat[:,123], cat[:,124], cat[:,125]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,126], cat[:,127], cat[:,128]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,129], cat[:,130], cat[:,131]
        self.wmin_all, self.starflag, self.nearstar = cat[:,132], cat[:,133], cat[:,134]
        self.nearsource, self.snr, self.snrflag = cat[:,135], cat[:,136], cat[:,137]
        self.use = cat[:,138]



class cat_ks_cosmos_0_10_7_FIR:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot07, self.eKstot07, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.G, self.eG, self.wG = cat[:,18], cat[:,19], cat[:,20]
        self.Gp, self.eGp, self.wGp = cat[:,21], cat[:,22], cat[:,23]
        self.Hl, self.eHl, self.wHl = cat[:,24], cat[:,25], cat[:,26]
        self.Hs, self.eHs, self.wHs = cat[:,27], cat[:,28], cat[:,29]
        self.I, self.eI, self.wI = cat[:,30], cat[:,31], cat[:,32]
        self.IA427, self.eIA427, self.wIA427 = cat[:,33], cat[:,34], cat[:,35]
        self.IA464, self.eIA464, self.wIA464 = cat[:,36], cat[:,37], cat[:,38]
        self.IA484, self.eIA484, self.wIA484 = cat[:,39], cat[:,40], cat[:,41]
        self.IA505, self.eIA505, self.wIA505 = cat[:,42], cat[:,43], cat[:,44]
        self.IA527, self.eIA527, self.wIA527 = cat[:,45], cat[:,46], cat[:,47]
        self.IA574, self.eIA574, self.wIA574 = cat[:,48], cat[:,49], cat[:,50]
        self.IA624, self.eIA624, self.wIA624 = cat[:,51], cat[:,52], cat[:,53]
        self.IA679, self.eIA679, self.wIA679 = cat[:,54], cat[:,55], cat[:,56]
        self.IA709, self.eIA709, self.wIA709 = cat[:,57], cat[:,58], cat[:,59]
        self.IA738, self.eIA738, self.wIA738 = cat[:,60], cat[:,61], cat[:,62]
        self.IA767, self.eIA767, self.wIA767 = cat[:,63], cat[:,64], cat[:,65]
        self.IA827, self.eIA827, self.wIA827 = cat[:,66], cat[:,67], cat[:,68]
        self.J1, self.eJ1, self.wJ1 = cat[:,69], cat[:,70], cat[:,71]
        self.J2, self.eJ2, self.wJ2 = cat[:,72], cat[:,73], cat[:,74]
        self.J3, self.eJ3, self.wJ3 = cat[:,75], cat[:,76], cat[:,77]
        self.Ks2, self.eKs2, self.wKs2 = cat[:,78], cat[:,79], cat[:,80]
        self.Ks, self.eKs, self.wKs = cat[:,81], cat[:,82], cat[:,83]
        self.NB118, self.eNB118, self.wNB118 = cat[:,84], cat[:,85], cat[:,86]
        self.NB209, self.eNB209, self.wNB209 = cat[:,87], cat[:,88], cat[:,89]
        self.R, self.eR, self.wR = cat[:,90], cat[:,91], cat[:,92]
        self.Rp, self.eRp, self.wRp = cat[:,93], cat[:,94], cat[:,95]
        self.U, self.eU, self.wU = cat[:,96], cat[:,97], cat[:,98]
        self.V, self.eV, self.wV = cat[:,99], cat[:,100], cat[:,101]
        self.Z, self.eZ, self.wZ = cat[:,102], cat[:,103], cat[:,104]
        self.Zp, self.eZp, self.wZp = cat[:,105], cat[:,106], cat[:,107]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,108], cat[:,109], cat[:,110]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,111], cat[:,112], cat[:,113]
        self.id_irac, self.CH1, self.eCH1 = cat[:,114], cat[:,115], cat[:,116]
        self.wCH1, self.CH2, self.eCH2 = cat[:,117], cat[:,118], cat[:,119]
        self.wCH2, self.CH3, self.eCH3 = cat[:,120], cat[:,121], cat[:,122]
        self.wCH3, self.CH4, self.eCH4 = cat[:,123], cat[:,124], cat[:,125]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,126], cat[:,127], cat[:,128]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,129], cat[:,130], cat[:,131]
        self.wmin_all, self.starflag, self.nearstar = cat[:,132], cat[:,133], cat[:,134]
        self.nearsource, self.snr, self.snrflag = cat[:,135], cat[:,136], cat[:,137]
        self.use = cat[:,138]
        self.f_mips24, self.e_mips24, self.contam_mips24, self.purity_mips24 = cat[:,139], cat[:,140], cat[:,141], cat[:,142]
        self.f_pacs100, self.e_pacs100, self.contam_pacs100, self.purity_pacs100 = cat[:,143], cat[:,144], cat[:,145], cat[:,146]
        self.f_pacs160, self.e_pacs160, self.contam_pacs160, self.purity_pacs160 = cat[:,147], cat[:,148], cat[:,149], cat[:,150]
        self.f_fir = np.array( zip( self.f_mips24, self.f_pacs100, self.f_pacs160 ) )
        self.e_fir = np.array( zip( self.e_mips24, self.e_pacs100, self.e_pacs160 ) )




class cat_ks_uds_0_0_15:
    def __init__(self, cat):
        self.id, self.x, self.y = cat[:,0], cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot09, self.eKstot09, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.H, self.eH, self.wH = cat[:,18], cat[:,19], cat[:,20]
        self.Hl, self.eHl, self.wHl = cat[:,21], cat[:,22], cat[:,23]
        self.Hs, self.eHs, self.wHs = cat[:,24], cat[:,25], cat[:,26]
        self.J, self.eJ, self.wJ = cat[:,27], cat[:,28], cat[:,29]
        self.J1, self.eJ1, self.wJ1 = cat[:,30], cat[:,31], cat[:,32]
        self.J2, self.eJ2, self.wJ2 = cat[:,33], cat[:,34], cat[:,35]
        self.J3, self.eJ3, self.wJ3 = cat[:,36], cat[:,37], cat[:,38]
        self.K, self.eK, self.wK = cat[:,39], cat[:,40], cat[:,41]
        self.Ks_FSU, self.eKs_FSU, self.wKs_FSU = cat[:,42], cat[:,43], cat[:,44]
        self.Ks, self.eKs, self.wKs = cat[:,45], cat[:,46], cat[:,47]
        self.R, self.eR, self.wR = cat[:,48], cat[:,49], cat[:,50]
        self.V, self.eV, self.wV = cat[:,51], cat[:,52], cat[:,53]
        self.i, self.ei, self.wi = cat[:,54], cat[:,55], cat[:,56]
        self.u, self.eu, self.wu = cat[:,57], cat[:,58], cat[:,59]
        self.z, self.ez, self.wz = cat[:,60], cat[:,61], cat[:,62]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,63], cat[:,64], cat[:,65]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,66], cat[:,67], cat[:,68]
        self.id_irac, self.CH1, self.eCH1 = cat[:,69], cat[:,70], cat[:,71]
        self.wCH1, self.CH2, self.eCH2 = cat[:,72], cat[:,73], cat[:,74]
        self.wCH2, self.CH3, self.eCH3 = cat[:,75], cat[:,76], cat[:,77]
        self.wCH3, self.CH4, self.eCH4 = cat[:,78], cat[:,79], cat[:,80]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,81], cat[:,82], cat[:,83]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,84], cat[:,85], cat[:,86]
        self.wmin_all, self.starflag, self.nearstar = cat[:,87], cat[:,88], cat[:,89]
        self.nearsource, self.snr, self.snrflag = cat[:,90], cat[:,91], cat[:,92]
        self.use = cat[:,93]



class cat_ks_uds_0_0_15_FIR:
    def __init__(self, cat):
        self.id, self.x, self.y = cat[:,0], cat[:,1], cat[:,2]
        self.ra, self.dec, self.SEflags = cat[:,3], cat[:,4], cat[:,5]
        self.iso_area, self.Kstot, self.eKstot = cat[:,6], cat[:,7], cat[:,8]
        self.ksauto, self.Ks_flux_radius, self.Ks_rkron_circ = cat[:,9], cat[:,10], cat[:,11]
        self.Kstot09, self.eKstot09, self.apcorr = cat[:,12], cat[:,13], cat[:,14]
        self.B, self.eB, self.wB = cat[:,15], cat[:,16], cat[:,17]
        self.H, self.eH, self.wH = cat[:,18], cat[:,19], cat[:,20]
        self.Hl, self.eHl, self.wHl = cat[:,21], cat[:,22], cat[:,23]
        self.Hs, self.eHs, self.wHs = cat[:,24], cat[:,25], cat[:,26]
        self.J, self.eJ, self.wJ = cat[:,27], cat[:,28], cat[:,29]
        self.J1, self.eJ1, self.wJ1 = cat[:,30], cat[:,31], cat[:,32]
        self.J2, self.eJ2, self.wJ2 = cat[:,33], cat[:,34], cat[:,35]
        self.J3, self.eJ3, self.wJ3 = cat[:,36], cat[:,37], cat[:,38]
        self.K, self.eK, self.wK = cat[:,39], cat[:,40], cat[:,41]
        self.Ks_FSU, self.eKs_FSU, self.wKs_FSU = cat[:,42], cat[:,43], cat[:,44]
        self.Ks, self.eKs, self.wKs = cat[:,45], cat[:,46], cat[:,47]
        self.R, self.eR, self.wR = cat[:,48], cat[:,49], cat[:,50]
        self.V, self.eV, self.wV = cat[:,51], cat[:,52], cat[:,53]
        self.i, self.ei, self.wi = cat[:,54], cat[:,55], cat[:,56]
        self.u, self.eu, self.wu = cat[:,57], cat[:,58], cat[:,59]
        self.z, self.ez, self.wz = cat[:,60], cat[:,61], cat[:,62]
        self.f_F125W, self.e_F125W, self.w_F125W = cat[:,63], cat[:,64], cat[:,65]
        self.f_F160W, self.e_F160W, self.w_F160W = cat[:,66], cat[:,67], cat[:,68]
        self.id_irac, self.CH1, self.eCH1 = cat[:,69], cat[:,70], cat[:,71]
        self.wCH1, self.CH2, self.eCH2 = cat[:,72], cat[:,73], cat[:,74]
        self.wCH2, self.CH3, self.eCH3 = cat[:,75], cat[:,76], cat[:,77]
        self.wCH3, self.CH4, self.eCH4 = cat[:,78], cat[:,79], cat[:,80]
        self.wCH4, self.wmin_optical, self.wmin_fs = cat[:,81], cat[:,82], cat[:,83]
        self.wmin_jhk, self.wmin_hst, self.wmin_irac = cat[:,84], cat[:,85], cat[:,86]
        self.wmin_all, self.starflag, self.nearstar = cat[:,87], cat[:,88], cat[:,89]
        self.nearsource, self.snr, self.snrflag = cat[:,90], cat[:,91], cat[:,92]
        self.use = cat[:,93]
        self.f_mips24, self.e_mips24, self.contam_mips24, self.purity_mips24 = cat[:,94], cat[:,95], cat[:,96], cat[:,97]
        self.f_pacs100, self.e_pacs100, self.contam_pacs100, self.purity_pacs100 = cat[:,98], cat[:,99], cat[:,100], cat[:,101]
        self.f_pacs160, self.e_pacs160, self.contam_pacs160, self.purity_pacs160 = cat[:,102], cat[:,103], cat[:,104], cat[:,105]
        self.f_fir = np.array( zip( self.f_mips24, self.f_pacs100, self.f_pacs160 ) )
        self.e_fir = np.array( zip( self.e_mips24, self.e_pacs100, self.e_pacs160 ) )




class cat_cosmos_nmbs_5_1:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.Kaper = cat[:,3], cat[:,4], cat[:,5]
        self.eKaper, self.CH4, self.eCH4 = cat[:,6], cat[:,7], cat[:,8]
        self.wCH4, self.CH3, self.eCH3 = cat[:,9], cat[:,10], cat[:,11]
        self.wCH3, self.CH2, self.eCH2 = cat[:,12], cat[:,13], cat[:,14]
        self.wCH2, self.CH1, self.eCH1 = cat[:,15], cat[:,16], cat[:,17]
        self.wCH1, self.Ks, self.eKs = cat[:,18], cat[:,19], cat[:,20]
        self.wKs, self.K, self.eK = cat[:,21], cat[:,22], cat[:,23]
        self.wK, self.H, self.eH = cat[:,24], cat[:,25], cat[:,26]
        self.wH, self.H2, self.eH2 = cat[:,27], cat[:,28], cat[:,29]
        self.wH2, self.H1, self.eH1 = cat[:,30], cat[:,31], cat[:,32]
        self.wH1, self.J, self.eJ = cat[:,33], cat[:,34], cat[:,35]
        self.wJ, self.J3, self.eJ3 = cat[:,36], cat[:,37], cat[:,38]
        self.wJ3, self.J2, self.eJ2 = cat[:,39], cat[:,40], cat[:,41]
        self.wJ2, self.J1, self.eJ1 = cat[:,42], cat[:,43], cat[:,44]
        self.wJ1, self.Zp, self.eZp = cat[:,45], cat[:,46], cat[:,47]
        self.wZp, self.z, self.ez = cat[:,48], cat[:,49], cat[:,50]
        self.wz, self.Ip, self.eIp = cat[:,51], cat[:,52], cat[:,53]
        self.wIp, self.I, self.eI = cat[:,54], cat[:,55], cat[:,56]
        self.wI, self.Rp, self.eRp = cat[:,57], cat[:,58], cat[:,59]
        self.wRp, self.R, self.eR = cat[:,60], cat[:,61], cat[:,62]
        self.wR, self.G, self.eG = cat[:,63], cat[:,64], cat[:,65]
        self.wG, self.V, self.eV = cat[:,66], cat[:,67], cat[:,68]
        self.wV, self.B, self.eB = cat[:,69], cat[:,70], cat[:,71]
        self.wB, self.U, self.eU = cat[:,72], cat[:,73], cat[:,74]
        self.wU, self.NUV, self.eNUV = cat[:,75], cat[:,76], cat[:,77]
        self.wNUV, self.FUV, self.eFUV = cat[:,78], cat[:,79], cat[:,80]
        self.wFUV, self.IA427, self.eIA427 = cat[:,81], cat[:,82], cat[:,83]
        self.IA464, self.eIA464, self.IA484 = cat[:,84], cat[:,85], cat[:,86]
        self.eIA484, self.IA505, self.eIA505 = cat[:,87], cat[:,88], cat[:,89]
        self.IA527, self.eIA527, self.IA574 = cat[:,90], cat[:,91], cat[:,92]
        self.eIA574, self.IA624, self.eIA624 = cat[:,93], cat[:,94], cat[:,95]
        self.IA679, self.eIA679, self.IA709 = cat[:,96], cat[:,97], cat[:,98]
        self.eIA709, self.IA738, self.eIA738 = cat[:,99], cat[:,100], cat[:,101]
        self.IA767, self.eIA767, self.IA827 = cat[:,102], cat[:,103], cat[:,104]
        self.eIA827, self.ftot24um_uJy, self.f24um_uJy = cat[:,105], cat[:,106], cat[:,107]
        self.e24um_uJy, self.w24um, self.wmin = cat[:,108], cat[:,109], cat[:,110]
        self.wmin_irac, self.z_spec, self.starflag = cat[:,111], cat[:,112], cat[:,113]
        self.ap_col, self.ap_tot, self.totcor = cat[:,114], cat[:,115], cat[:,116]
        self.K_ellip, self.K_theta_J2000, self.K_R50 = cat[:,117], cat[:,118], cat[:,119]
        self.K_class_star, self.K_flags, self.UH2_flags = cat[:,120], cat[:,121], cat[:,122]
        self.Near_Star, self.CH1_contam, self.CH2_contam = cat[:,123], cat[:,124], cat[:,125]
        self.CH3_contam, self.CH4_contam, self.NUV_contam = cat[:,126], cat[:,127], cat[:,128]
        self.FUV_contam, self.contam_flag, self.nchild = cat[:,129], cat[:,130], cat[:,131]
        self.id_parent, self.use = cat[:,132], cat[:,133]

class cat_aegis_nmbs_5_1:
    def __init__(self, cat):
        self.id, self.x, self.y = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.ra, self.dec, self.Kaper = cat[:,3], cat[:,4], cat[:,5]
        self.eKaper, self.CH4, self.eCH4 = cat[:,6], cat[:,7], cat[:,8]
        self.wCH4, self.CH3, self.eCH3 = cat[:,9], cat[:,10], cat[:,11]
        self.wCH3, self.CH2, self.eCH2 = cat[:,12], cat[:,13], cat[:,14]
        self.wCH2, self.CH1, self.eCH1 = cat[:,15], cat[:,16], cat[:,17]
        self.wCH1, self.Ks, self.eKs = cat[:,18], cat[:,19], cat[:,20]
        self.wKs, self.K, self.eK = cat[:,21], cat[:,22], cat[:,23]
        self.wK, self.H, self.eH = cat[:,24], cat[:,25], cat[:,26]
        self.wH, self.H2, self.eH2 = cat[:,27], cat[:,28], cat[:,29]
        self.wH2, self.H1, self.eH1 = cat[:,30], cat[:,31], cat[:,32]
        self.wH1, self.J, self.eJ = cat[:,33], cat[:,34], cat[:,35]
        self.wJ, self.J3, self.eJ3 = cat[:,36], cat[:,37], cat[:,38]
        self.wJ3, self.J2, self.eJ2 = cat[:,39], cat[:,40], cat[:,41]
        self.wJ2, self.J1, self.eJ1 = cat[:,42], cat[:,43], cat[:,44]
        self.wJ1, self.z, self.ez = cat[:,45], cat[:,46], cat[:,47]
        self.wz, self.I, self.eI = cat[:,48], cat[:,49], cat[:,50]
        self.wI, self.R, self.eR = cat[:,51], cat[:,52], cat[:,53]
        self.wR, self.G, self.eG = cat[:,54], cat[:,55], cat[:,56]
        self.wG, self.U, self.eU = cat[:,57], cat[:,58], cat[:,59]
        self.wU, self.NUV, self.eNUV = cat[:,60], cat[:,61], cat[:,62]
        self.wNUV, self.FUV, self.eFUV = cat[:,63], cat[:,64], cat[:,65]
        self.wFUV, self.ftot24um_uJy, self.f24um_uJy = cat[:,66], cat[:,67], cat[:,68]
        self.e24um_uJy, self.w24um, self.wmin = cat[:,69], cat[:,70], cat[:,71]
        self.wmin_irac, self.z_spec, self.starflag = cat[:,72], cat[:,73], cat[:,74]
        self.ap_col, self.ap_tot, self.totcor = cat[:,75], cat[:,76], cat[:,77]
        self.K_ellip, self.K_theta_J2000, self.K_R50 = cat[:,78], cat[:,79], cat[:,80]
        self.K_class_star, self.K_flags, self.UH2_flags = cat[:,81], cat[:,82], cat[:,83]
        self.Near_Star, self.CH1_contam, self.CH2_contam = cat[:,84], cat[:,85], cat[:,86]
        self.CH3_contam, self.CH4_contam, self.NUV_contam = cat[:,87], cat[:,88], cat[:,89]
        self.FUV_contam, self.contam_flag, self.nchild = cat[:,90], cat[:,91], cat[:,92]
        self.id_parent, self.use = cat[:,93], cat[:,94]



class cat_ks_cdfs_1_5_1:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.w_Ksall = data[:,9]
        self.apcorr = data[:,10]
        self.Ks_ratio = data[:,11]
        self.fapcirc07_Ksall = data[:,12]
        self.eapcirc07_Ksall = data[:,13]
        self.apcorr09 = data[:,14]
        self.fcirc07_Ksall = data[:,15]
        self.ecirc07_Ksall = data[:,16]
        self.fauto_Ksall = data[:,17]
        self.flux50_radius = data[:,18]
        self.a_vector = data[:,19]
        self.b_vector = data[:,20]
        self.kron_radius = data[:,21]
        self.f_Ksall = data[:,22]
        self.e_Ksall = data[:,23]
        self.f_B = data[:,24]
        self.e_B = data[:,25]
        self.w_B = data[:,26]
        self.f_I = data[:,27]
        self.e_I = data[:,28]
        self.w_I = data[:,29]
        self.f_R = data[:,30]
        self.e_R = data[:,31]
        self.w_R = data[:,32]
        self.f_U = data[:,33]
        self.e_U = data[:,34]
        self.w_U = data[:,35]
        self.f_V = data[:,36]
        self.e_V = data[:,37]
        self.w_V = data[:,38]
        self.f_Z = data[:,39]
        self.e_Z = data[:,40]
        self.w_Z = data[:,41]
        self.f_Hs = data[:,42]
        self.e_Hs = data[:,43]
        self.w_Hs = data[:,44]
        self.f_Hl = data[:,45]
        self.e_Hl = data[:,46]
        self.w_Hl = data[:,47]
        self.f_J1 = data[:,48]
        self.e_J1 = data[:,49]
        self.w_J1 = data[:,50]
        self.f_J2 = data[:,51]
        self.e_J2 = data[:,52]
        self.w_J2 = data[:,53]
        self.f_J3 = data[:,54]
        self.e_J3 = data[:,55]
        self.w_J3 = data[:,56]
        self.f_Ks = data[:,57]
        self.e_Ks = data[:,58]
        self.w_Ks = data[:,59]
        self.f_NB118 = data[:,60]
        self.e_NB118 = data[:,61]
        self.w_NB118 = data[:,62]
        self.f_NB209 = data[:,63]
        self.e_NB209 = data[:,64]
        self.w_NB209 = data[:,65]
        self.f_F098M = data[:,66]
        self.e_F098M = data[:,67]
        self.w_F098M = data[:,68]
        self.f_F105W = data[:,69]
        self.e_F105W = data[:,70]
        self.w_F105W = data[:,71]
        self.f_F125W = data[:,72]
        self.e_F125W = data[:,73]
        self.w_F125W = data[:,74]
        self.f_F140W = data[:,75]
        self.e_F140W = data[:,76]
        self.w_F140W = data[:,77]
        self.f_F160W = data[:,78]
        self.e_F160W = data[:,79]
        self.w_F160W = data[:,80]
        self.f_F814W = data[:,81]
        self.e_F814W = data[:,82]
        self.w_F814W = data[:,83]
        self.f_IA484 = data[:,84]
        self.e_IA484 = data[:,85]
        self.w_IA484 = data[:,86]
        self.f_IA527 = data[:,87]
        self.e_IA527 = data[:,88]
        self.w_IA527 = data[:,89]
        self.f_IA574 = data[:,90]
        self.e_IA574 = data[:,91]
        self.w_IA574 = data[:,92]
        self.f_IA598 = data[:,93]
        self.e_IA598 = data[:,94]
        self.w_IA598 = data[:,95]
        self.f_IA624 = data[:,96]
        self.e_IA624 = data[:,97]
        self.w_IA624 = data[:,98]
        self.f_IA651 = data[:,99]
        self.e_IA651 = data[:,100]
        self.w_IA651 = data[:,101]
        self.f_IA679 = data[:,102]
        self.e_IA679 = data[:,103]
        self.w_IA679 = data[:,104]
        self.f_IA738 = data[:,105]
        self.e_IA738 = data[:,106]
        self.w_IA738 = data[:,107]
        self.f_IA767 = data[:,108]
        self.e_IA767 = data[:,109]
        self.w_IA767 = data[:,110]
        self.f_IA797 = data[:,111]
        self.e_IA797 = data[:,112]
        self.w_IA797 = data[:,113]
        self.f_IA856 = data[:,114]
        self.e_IA856 = data[:,115]
        self.w_IA856 = data[:,116]
        self.f_WFI_V = data[:,117]
        self.e_WFI_V = data[:,118]
        self.w_WFI_V = data[:,119]
        self.f_WFI_Rc = data[:,120]
        self.e_WFI_Rc = data[:,121]
        self.w_WFI_Rc = data[:,122]
        self.f_WFI_U38 = data[:,123]
        self.e_WFI_U38 = data[:,124]
        self.w_WFI_U38 = data[:,125]
        self.f_tenisK = data[:,126]
        self.e_tenisK = data[:,127]
        self.w_tenisK = data[:,128]
        self.f_IRAC_36 = data[:,129]
        self.e_IRAC_36 = data[:,130]
        self.w_IRAC_36 = data[:,131]
        self.f_IRAC_45 = data[:,132]
        self.e_IRAC_45 = data[:,133]
        self.w_IRAC_45 = data[:,134]
        self.f_IRAC_58 = data[:,135]
        self.e_IRAC_58 = data[:,136]
        self.w_IRAC_58 = data[:,137]
        self.f_IRAC_80 = data[:,138]
        self.e_IRAC_80 = data[:,139]
        self.w_IRAC_80 = data[:,140]
        self.wmin_optical = data[:,141]
        self.wmin_hst_optical = data[:,142]
        self.wmin_fs = data[:,143]
        self.wmin_jhk = data[:,144]
        self.wmin_hst = data[:,145]
        self.wmin_irac = data[:,146]
        self.wmin_all = data[:,147]
        self.star = data[:,148]
        self.nearstar = data[:,149]
        self.use = data[:,150]


class cat_ks_cdfs_1_5_3:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.apcorr = data[:,9]
        self.Ks_ratio = data[:,10]
        self.fapcirc07_Ksall = data[:,11]
        self.eapcirc07_Ksall = data[:,12]
        self.apcorr09 = data[:,13]
        self.fcirc07_Ksall = data[:,14]
        self.ecirc07_Ksall = data[:,15]
        self.fauto_Ksall = data[:,16]
        self.flux50_radius = data[:,17]
        self.a_vector = data[:,18]
        self.b_vector = data[:,19]
        self.kron_radius = data[:,20]
        self.f_Ksall = data[:,21]
        self.e_Ksall = data[:,22]
        self.w_Ksall = data[:,23]
        self.f_B = data[:,24]
        self.e_B = data[:,25]
        self.w_B = data[:,26]
        self.f_I = data[:,27]
        self.e_I = data[:,28]
        self.w_I = data[:,29]
        self.f_R = data[:,30]
        self.e_R = data[:,31]
        self.w_R = data[:,32]
        self.f_U = data[:,33]
        self.e_U = data[:,34]
        self.w_U = data[:,35]
        self.f_V = data[:,36]
        self.e_V = data[:,37]
        self.w_V = data[:,38]
        self.f_Z = data[:,39]
        self.e_Z = data[:,40]
        self.w_Z = data[:,41]
        self.f_Hs = data[:,42]
        self.e_Hs = data[:,43]
        self.w_Hs = data[:,44]
        self.f_Hl = data[:,45]
        self.e_Hl = data[:,46]
        self.w_Hl = data[:,47]
        self.f_J1 = data[:,48]
        self.e_J1 = data[:,49]
        self.w_J1 = data[:,50]
        self.f_J2 = data[:,51]
        self.e_J2 = data[:,52]
        self.w_J2 = data[:,53]
        self.f_J3 = data[:,54]
        self.e_J3 = data[:,55]
        self.w_J3 = data[:,56]
        self.f_Ks = data[:,57]
        self.e_Ks = data[:,58]
        self.w_Ks = data[:,59]
        self.f_NB118 = data[:,60]
        self.e_NB118 = data[:,61]
        self.w_NB118 = data[:,62]
        self.f_NB209 = data[:,63]
        self.e_NB209 = data[:,64]
        self.w_NB209 = data[:,65]
        self.f_F098M = data[:,66]
        self.e_F098M = data[:,67]
        self.w_F098M = data[:,68]
        self.f_F105W = data[:,69]
        self.e_F105W = data[:,70]
        self.w_F105W = data[:,71]
        self.f_F125W = data[:,72]
        self.e_F125W = data[:,73]
        self.w_F125W = data[:,74]
        self.f_F140W = data[:,75]
        self.e_F140W = data[:,76]
        self.w_F140W = data[:,77]
        self.f_F160W = data[:,78]
        self.e_F160W = data[:,79]
        self.w_F160W = data[:,80]
        self.f_F814W = data[:,81]
        self.e_F814W = data[:,82]
        self.w_F814W = data[:,83]
        self.f_IA484 = data[:,84]
        self.e_IA484 = data[:,85]
        self.w_IA484 = data[:,86]
        self.f_IA527 = data[:,87]
        self.e_IA527 = data[:,88]
        self.w_IA527 = data[:,89]
        self.f_IA574 = data[:,90]
        self.e_IA574 = data[:,91]
        self.w_IA574 = data[:,92]
        self.f_IA598 = data[:,93]
        self.e_IA598 = data[:,94]
        self.w_IA598 = data[:,95]
        self.f_IA624 = data[:,96]
        self.e_IA624 = data[:,97]
        self.w_IA624 = data[:,98]
        self.f_IA651 = data[:,99]
        self.e_IA651 = data[:,100]
        self.w_IA651 = data[:,101]
        self.f_IA679 = data[:,102]
        self.e_IA679 = data[:,103]
        self.w_IA679 = data[:,104]
        self.f_IA738 = data[:,105]
        self.e_IA738 = data[:,106]
        self.w_IA738 = data[:,107]
        self.f_IA767 = data[:,108]
        self.e_IA767 = data[:,109]
        self.w_IA767 = data[:,110]
        self.f_IA797 = data[:,111]
        self.e_IA797 = data[:,112]
        self.w_IA797 = data[:,113]
        self.f_IA856 = data[:,114]
        self.e_IA856 = data[:,115]
        self.w_IA856 = data[:,116]
        self.f_WFI_V = data[:,117]
        self.e_WFI_V = data[:,118]
        self.w_WFI_V = data[:,119]
        self.f_WFI_Rc = data[:,120]
        self.e_WFI_Rc = data[:,121]
        self.w_WFI_Rc = data[:,122]
        self.f_WFI_U38 = data[:,123]
        self.e_WFI_U38 = data[:,124]
        self.w_WFI_U38 = data[:,125]
        self.f_tenisK = data[:,126]
        self.e_tenisK = data[:,127]
        self.w_tenisK = data[:,128]
        self.f_IRAC_36 = data[:,129]
        self.e_IRAC_36 = data[:,130]
        self.w_IRAC_36 = data[:,131]
        self.f_IRAC_45 = data[:,132]
        self.e_IRAC_45 = data[:,133]
        self.w_IRAC_45 = data[:,134]
        self.f_IRAC_58 = data[:,135]
        self.e_IRAC_58 = data[:,136]
        self.w_IRAC_58 = data[:,137]
        self.f_IRAC_80 = data[:,138]
        self.e_IRAC_80 = data[:,139]
        self.w_IRAC_80 = data[:,140]
        self.wmin_optical = data[:,141]
        self.wmin_hst_optical = data[:,142]
        self.wmin_fs = data[:,143]
        self.wmin_jhk = data[:,144]
        self.wmin_hst = data[:,145]
        self.wmin_irac = data[:,146]
        self.wmin_all = data[:,147]
        self.star = data[:,148]
        self.nearstar = data[:,149]
        self.use = data[:,150]
        self.snr = data[:,151]



class cat_ks_cosmos_1_2_5:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.w_Ksall = data[:,9]
        self.apcorr = data[:,10]
        self.Ks_ratio = data[:,11]
        self.fapcirc09_Ksall = data[:,12]
        self.eapcirc09_Ksall = data[:,13]
        self.apcorr09 = data[:,14]
        self.fcirc09_Ksall = data[:,15]
        self.ecirc09_Ksall = data[:,16]
        self.fauto_Ksall = data[:,17]
        self.flux50_radius = data[:,18]
        self.a_vector = data[:,19]
        self.b_vector = data[:,20]
        self.kron_radius = data[:,21]
        self.f_Ksall = data[:,22]
        self.e_Ksall = data[:,23]
        self.f_B = data[:,24]
        self.e_B = data[:,25]
        self.w_B = data[:,26]
        self.f_G = data[:,27]
        self.e_G = data[:,28]
        self.w_G = data[:,29]
        self.f_I = data[:,30]
        self.e_I = data[:,31]
        self.w_I = data[:,32]
        self.f_IA427 = data[:,33]
        self.e_IA427 = data[:,34]
        self.w_IA427 = data[:,35]
        self.f_IA484 = data[:,36]
        self.e_IA484 = data[:,37]
        self.w_IA484 = data[:,38]
        self.f_IA505 = data[:,39]
        self.e_IA505 = data[:,40]
        self.w_IA505 = data[:,41]
        self.f_IA527 = data[:,42]
        self.e_IA527 = data[:,43]
        self.w_IA527 = data[:,44]
        self.f_IA624 = data[:,45]
        self.e_IA624 = data[:,46]
        self.w_IA624 = data[:,47]
        self.f_IA709 = data[:,48]
        self.e_IA709 = data[:,49]
        self.w_IA709 = data[:,50]
        self.f_IA738 = data[:,51]
        self.e_IA738 = data[:,52]
        self.w_IA738 = data[:,53]
        self.f_R = data[:,54]
        self.e_R = data[:,55]
        self.w_R = data[:,56]
        self.f_U = data[:,57]
        self.e_U = data[:,58]
        self.w_U = data[:,59]
        self.f_V = data[:,60]
        self.e_V = data[:,61]
        self.w_V = data[:,62]
        self.f_Rp = data[:,63]
        self.e_Rp = data[:,64]
        self.w_Rp = data[:,65]
        self.f_Z = data[:,66]
        self.e_Z = data[:,67]
        self.w_Z = data[:,68]
        self.f_Zp = data[:,69]
        self.e_Zp = data[:,70]
        self.w_Zp = data[:,71]
        self.f_Hl = data[:,72]
        self.e_Hl = data[:,73]
        self.w_Hl = data[:,74]
        self.f_Hs = data[:,75]
        self.e_Hs = data[:,76]
        self.w_Hs = data[:,77]
        self.f_J1 = data[:,78]
        self.e_J1 = data[:,79]
        self.w_J1 = data[:,80]
        self.f_J2 = data[:,81]
        self.e_J2 = data[:,82]
        self.w_J2 = data[:,83]
        self.f_J3 = data[:,84]
        self.e_J3 = data[:,85]
        self.w_J3 = data[:,86]
        self.f_Ks = data[:,87]
        self.e_Ks = data[:,88]
        self.w_Ks = data[:,89]
        self.f_NB118 = data[:,90]
        self.e_NB118 = data[:,91]
        self.w_NB118 = data[:,92]
        self.f_NB209 = data[:,93]
        self.e_NB209 = data[:,94]
        self.w_NB209 = data[:,95]
        self.f_F125W = data[:,96]
        self.e_F125W = data[:,97]
        self.w_F125W = data[:,98]
        self.f_F140W = data[:,99]
        self.e_F140W = data[:,100]
        self.w_F140W = data[:,101]
        self.f_F160W = data[:,102]
        self.e_F160W = data[:,103]
        self.w_F160W = data[:,104]
        self.f_F606W = data[:,105]
        self.e_F606W = data[:,106]
        self.w_F606W = data[:,107]
        self.f_F814W = data[:,108]
        self.e_F814W = data[:,109]
        self.w_F814W = data[:,110]
        self.f_UVISTA_J = data[:,111]
        self.e_UVISTA_J = data[:,112]
        self.w_UVISTA_J = data[:,113]
        self.f_UVISTA_H = data[:,114]
        self.e_UVISTA_H = data[:,115]
        self.w_UVISTA_H = data[:,116]
        self.f_UVISTA_Ks = data[:,117]
        self.e_UVISTA_Ks = data[:,118]
        self.w_UVISTA_Ks = data[:,119]
        self.f_UVISTA_Y = data[:,120]
        self.e_UVISTA_Y = data[:,121]
        self.w_UVISTA_Y = data[:,122]
        self.f_IRAC_36 = data[:,123]
        self.e_IRAC_36 = data[:,124]
        self.w_IRAC_36 = data[:,125]
        self.f_IRAC_45 = data[:,126]
        self.e_IRAC_45 = data[:,127]
        self.w_IRAC_45 = data[:,128]
        self.f_IRAC_58 = data[:,129]
        self.e_IRAC_58 = data[:,130]
        self.w_IRAC_58 = data[:,131]
        self.f_IRAC_80 = data[:,132]
        self.e_IRAC_80 = data[:,133]
        self.w_IRAC_80 = data[:,134]
        self.wmin_optical = data[:,135]
        self.wmin_hst_optical = data[:,136]
        self.wmin_fs = data[:,137]
        self.wmin_jhk = data[:,138]
        self.wmin_hst = data[:,139]
        self.wmin_irac = data[:,140]
        self.wmin_all = data[:,141]
        self.star = data[:,142]
        self.nearstar = data[:,143]
        self.use = data[:,144]


class cat_ks_cosmos_1_2_7:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.apcorr = data[:,9]
        self.Ks_ratio = data[:,10]
        self.fapcirc09_Ksall = data[:,11]
        self.eapcirc09_Ksall = data[:,12]
        self.apcorr09 = data[:,13]
        self.fcirc09_Ksall = data[:,14]
        self.ecirc09_Ksall = data[:,15]
        self.fauto_Ksall = data[:,16]
        self.flux50_radius = data[:,17]
        self.a_vector = data[:,18]
        self.b_vector = data[:,19]
        self.kron_radius = data[:,20]
        self.f_Ksall = data[:,21]
        self.e_Ksall = data[:,22]
        self.w_Ksall = data[:,23]
        self.f_B = data[:,24]
        self.e_B = data[:,25]
        self.w_B = data[:,26]
        self.f_G = data[:,27]
        self.e_G = data[:,28]
        self.w_G = data[:,29]
        self.f_I = data[:,30]
        self.e_I = data[:,31]
        self.w_I = data[:,32]
        self.f_IA427 = data[:,33]
        self.e_IA427 = data[:,34]
        self.w_IA427 = data[:,35]
        self.f_IA484 = data[:,36]
        self.e_IA484 = data[:,37]
        self.w_IA484 = data[:,38]
        self.f_IA505 = data[:,39]
        self.e_IA505 = data[:,40]
        self.w_IA505 = data[:,41]
        self.f_IA527 = data[:,42]
        self.e_IA527 = data[:,43]
        self.w_IA527 = data[:,44]
        self.f_IA624 = data[:,45]
        self.e_IA624 = data[:,46]
        self.w_IA624 = data[:,47]
        self.f_IA709 = data[:,48]
        self.e_IA709 = data[:,49]
        self.w_IA709 = data[:,50]
        self.f_IA738 = data[:,51]
        self.e_IA738 = data[:,52]
        self.w_IA738 = data[:,53]
        self.f_R = data[:,54]
        self.e_R = data[:,55]
        self.w_R = data[:,56]
        self.f_U = data[:,57]
        self.e_U = data[:,58]
        self.w_U = data[:,59]
        self.f_V = data[:,60]
        self.e_V = data[:,61]
        self.w_V = data[:,62]
        self.f_Rp = data[:,63]
        self.e_Rp = data[:,64]
        self.w_Rp = data[:,65]
        self.f_Z = data[:,66]
        self.e_Z = data[:,67]
        self.w_Z = data[:,68]
        self.f_Zp = data[:,69]
        self.e_Zp = data[:,70]
        self.w_Zp = data[:,71]
        self.f_Hl = data[:,72]
        self.e_Hl = data[:,73]
        self.w_Hl = data[:,74]
        self.f_Hs = data[:,75]
        self.e_Hs = data[:,76]
        self.w_Hs = data[:,77]
        self.f_J1 = data[:,78]
        self.e_J1 = data[:,79]
        self.w_J1 = data[:,80]
        self.f_J2 = data[:,81]
        self.e_J2 = data[:,82]
        self.w_J2 = data[:,83]
        self.f_J3 = data[:,84]
        self.e_J3 = data[:,85]
        self.w_J3 = data[:,86]
        self.f_Ks = data[:,87]
        self.e_Ks = data[:,88]
        self.w_Ks = data[:,89]
        self.f_NB118 = data[:,90]
        self.e_NB118 = data[:,91]
        self.w_NB118 = data[:,92]
        self.f_NB209 = data[:,93]
        self.e_NB209 = data[:,94]
        self.w_NB209 = data[:,95]
        self.f_F125W = data[:,96]
        self.e_F125W = data[:,97]
        self.w_F125W = data[:,98]
        self.f_F140W = data[:,99]
        self.e_F140W = data[:,100]
        self.w_F140W = data[:,101]
        self.f_F160W = data[:,102]
        self.e_F160W = data[:,103]
        self.w_F160W = data[:,104]
        self.f_F606W = data[:,105]
        self.e_F606W = data[:,106]
        self.w_F606W = data[:,107]
        self.f_F814W = data[:,108]
        self.e_F814W = data[:,109]
        self.w_F814W = data[:,110]
        self.f_UVISTA_J = data[:,111]
        self.e_UVISTA_J = data[:,112]
        self.w_UVISTA_J = data[:,113]
        self.f_UVISTA_H = data[:,114]
        self.e_UVISTA_H = data[:,115]
        self.w_UVISTA_H = data[:,116]
        self.f_UVISTA_Ks = data[:,117]
        self.e_UVISTA_Ks = data[:,118]
        self.w_UVISTA_Ks = data[:,119]
        self.f_UVISTA_Y = data[:,120]
        self.e_UVISTA_Y = data[:,121]
        self.w_UVISTA_Y = data[:,122]
        self.f_IRAC_36 = data[:,123]
        self.e_IRAC_36 = data[:,124]
        self.w_IRAC_36 = data[:,125]
        self.f_IRAC_45 = data[:,126]
        self.e_IRAC_45 = data[:,127]
        self.w_IRAC_45 = data[:,128]
        self.f_IRAC_58 = data[:,129]
        self.e_IRAC_58 = data[:,130]
        self.w_IRAC_58 = data[:,131]
        self.f_IRAC_80 = data[:,132]
        self.e_IRAC_80 = data[:,133]
        self.w_IRAC_80 = data[:,134]
        self.wmin_optical = data[:,135]
        self.wmin_hst_optical = data[:,136]
        self.wmin_fs = data[:,137]
        self.wmin_jhk = data[:,138]
        self.wmin_hst = data[:,139]
        self.wmin_irac = data[:,140]
        self.wmin_all = data[:,141]
        self.star = data[:,142]
        self.nearstar = data[:,143]
        self.use = data[:,144]
        self.snr = data[:,145]


class cat_ks_uds_1_3_1:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.w_Ksall = data[:,9]
        self.apcorr = data[:,10]
        self.Ks_ratio = data[:,11]
        self.fapcirc09_Ksall = data[:,12]
        self.eapcirc09_Ksall = data[:,13]
        self.apcorr09 = data[:,14]
        self.fcirc09_Ksall = data[:,15]
        self.ecirc09_Ksall = data[:,16]
        self.fauto_Ksall = data[:,17]
        self.flux50_radius = data[:,18]
        self.a_vector = data[:,19]
        self.b_vector = data[:,20]
        self.kron_radius = data[:,21]
        self.f_Ksall = data[:,22]
        self.e_Ksall = data[:,23]
        self.f_u = data[:,24]
        self.e_u = data[:,25]
        self.w_u = data[:,26]
        self.f_B = data[:,27]
        self.e_B = data[:,28]
        self.w_B = data[:,29]
        self.f_V = data[:,30]
        self.e_V = data[:,31]
        self.w_V = data[:,32]
        self.f_R = data[:,33]
        self.e_R = data[:,34]
        self.w_R = data[:,35]
        self.f_i = data[:,36]
        self.e_i = data[:,37]
        self.w_i = data[:,38]
        self.f_z = data[:,39]
        self.e_z = data[:,40]
        self.w_z = data[:,41]
        self.f_J1 = data[:,42]
        self.e_J1 = data[:,43]
        self.w_J1 = data[:,44]
        self.f_J2 = data[:,45]
        self.e_J2 = data[:,46]
        self.w_J2 = data[:,47]
        self.f_J3 = data[:,48]
        self.e_J3 = data[:,49]
        self.w_J3 = data[:,50]
        self.f_Hs = data[:,51]
        self.e_Hs = data[:,52]
        self.w_Hs = data[:,53]
        self.f_Hl = data[:,54]
        self.e_Hl = data[:,55]
        self.w_Hl = data[:,56]
        self.f_Ks = data[:,57]
        self.e_Ks = data[:,58]
        self.w_Ks = data[:,59]
        self.f_J = data[:,60]
        self.e_J = data[:,61]
        self.w_J = data[:,62]
        self.f_H = data[:,63]
        self.e_H = data[:,64]
        self.w_H = data[:,65]
        self.f_K = data[:,66]
        self.e_K = data[:,67]
        self.w_K = data[:,68]
        self.f_F125W = data[:,69]
        self.e_F125W = data[:,70]
        self.w_F125W = data[:,71]
        self.f_F140W = data[:,72]
        self.e_F140W = data[:,73]
        self.w_F140W = data[:,74]
        self.f_F160W = data[:,75]
        self.e_F160W = data[:,76]
        self.w_F160W = data[:,77]
        self.f_F606W = data[:,78]
        self.e_F606W = data[:,79]
        self.w_F606W = data[:,80]
        self.f_F814W = data[:,81]
        self.e_F814W = data[:,82]
        self.w_F814W = data[:,83]
        self.f_Y = data[:,84]
        self.e_Y = data[:,85]
        self.w_Y = data[:,86]
        self.f_IRAC_36 = data[:,87]
        self.e_IRAC_36 = data[:,88]
        self.w_IRAC_36 = data[:,89]
        self.f_IRAC_45 = data[:,90]
        self.e_IRAC_45 = data[:,91]
        self.w_IRAC_45 = data[:,92]
        self.f_IRAC_58 = data[:,93]
        self.e_IRAC_58 = data[:,94]
        self.w_IRAC_58 = data[:,95]
        self.f_IRAC_80 = data[:,96]
        self.e_IRAC_80 = data[:,97]
        self.w_IRAC_80 = data[:,98]
        self.wmin_optical = data[:,99]
        self.wmin_hst_optical = data[:,100]
        self.wmin_fs = data[:,101]
        self.wmin_jhk = data[:,102]
        self.wmin_hst = data[:,103]
        self.wmin_irac = data[:,104]
        self.wmin_all = data[:,105]
        self.star = data[:,106]
        self.nearstar = data[:,107]
        self.use = data[:,108]


class cat_ks_uds_1_4_1:
    def __init__(self, data):
        self.id = data[:,0]
        self.x = data[:,1]
        self.y = data[:,2]
        self.ra = data[:,3]
        self.dec = data[:,4]
        self.SEflags = data[:,5]
        self.iso_area = data[:,6]
        self.fap_Ksall = data[:,7]
        self.eap_Ksall = data[:,8]
        self.apcorr = data[:,9]
        self.Ks_ratio = data[:,10]
        self.fapcirc09_Ksall = data[:,11]
        self.eapcirc09_Ksall = data[:,12]
        self.apcorr09 = data[:,13]
        self.fcirc09_Ksall = data[:,14]
        self.ecirc09_Ksall = data[:,15]
        self.fauto_Ksall = data[:,16]
        self.flux50_radius = data[:,17]
        self.a_vector = data[:,18]
        self.b_vector = data[:,19]
        self.kron_radius = data[:,20]
        self.f_Ksall = data[:,21]
        self.e_Ksall = data[:,22]
        self.w_Ksall = data[:,23]
        self.f_u = data[:,24]
        self.e_u = data[:,25]
        self.w_u = data[:,26]
        self.f_B = data[:,27]
        self.e_B = data[:,28]
        self.w_B = data[:,29]
        self.f_V = data[:,30]
        self.e_V = data[:,31]
        self.w_V = data[:,32]
        self.f_R = data[:,33]
        self.e_R = data[:,34]
        self.w_R = data[:,35]
        self.f_i = data[:,36]
        self.e_i = data[:,37]
        self.w_i = data[:,38]
        self.f_z = data[:,39]
        self.e_z = data[:,40]
        self.w_z = data[:,41]
        self.f_J1 = data[:,42]
        self.e_J1 = data[:,43]
        self.w_J1 = data[:,44]
        self.f_J2 = data[:,45]
        self.e_J2 = data[:,46]
        self.w_J2 = data[:,47]
        self.f_J3 = data[:,48]
        self.e_J3 = data[:,49]
        self.w_J3 = data[:,50]
        self.f_Hs = data[:,51]
        self.e_Hs = data[:,52]
        self.w_Hs = data[:,53]
        self.f_Hl = data[:,54]
        self.e_Hl = data[:,55]
        self.w_Hl = data[:,56]
        self.f_Ks = data[:,57]
        self.e_Ks = data[:,58]
        self.w_Ks = data[:,59]
        self.f_J = data[:,60]
        self.e_J = data[:,61]
        self.w_J = data[:,62]
        self.f_H = data[:,63]
        self.e_H = data[:,64]
        self.w_H = data[:,65]
        self.f_K = data[:,66]
        self.e_K = data[:,67]
        self.w_K = data[:,68]
        self.f_F125W = data[:,69]
        self.e_F125W = data[:,70]
        self.w_F125W = data[:,71]
        self.f_F140W = data[:,72]
        self.e_F140W = data[:,73]
        self.w_F140W = data[:,74]
        self.f_F160W = data[:,75]
        self.e_F160W = data[:,76]
        self.w_F160W = data[:,77]
        self.f_F606W = data[:,78]
        self.e_F606W = data[:,79]
        self.w_F606W = data[:,80]
        self.f_F814W = data[:,81]
        self.e_F814W = data[:,82]
        self.w_F814W = data[:,83]
        self.f_Y = data[:,84]
        self.e_Y = data[:,85]
        self.w_Y = data[:,86]
        self.f_IRAC_36 = data[:,87]
        self.e_IRAC_36 = data[:,88]
        self.w_IRAC_36 = data[:,89]
        self.f_IRAC_45 = data[:,90]
        self.e_IRAC_45 = data[:,91]
        self.w_IRAC_45 = data[:,92]
        self.f_IRAC_58 = data[:,93]
        self.e_IRAC_58 = data[:,94]
        self.w_IRAC_58 = data[:,95]
        self.f_IRAC_80 = data[:,96]
        self.e_IRAC_80 = data[:,97]
        self.w_IRAC_80 = data[:,98]
        self.wmin_optical = data[:,99]
        self.wmin_hst_optical = data[:,100]
        self.wmin_fs = data[:,101]
        self.wmin_jhk = data[:,102]
        self.wmin_hst = data[:,103]
        self.wmin_irac = data[:,104]
        self.wmin_all = data[:,105]
        self.star = data[:,106]
        self.nearstar = data[:,107]
        self.use = data[:,108]
        self.snr = data[:,109]


        
        
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ EAZY CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ['id','z_spec','z_a','z_m1','chi_a','z_p','chi_p','z_m2','odds','l68','u68','l95','u95','l99','u99','nfilt','q_z','z_peak','peak_prob','z_mc']
# ['id','z_spec','z_a','z_m1','chi_a','z_p','chi_p','z_m2','odds','l68','u68','l95','u95','l99','u99','nfilt','q_z','z_peak','peak_prob','z_mc']
class eazycat:
    def __init__(self, cat):
        self.id, self.z_spec, self.z_a = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.z_m1, self.chi_a, self.z_p = cat[:,3], cat[:,4], cat[:,5]
        self.chi_p, self.z_m2, self.odds = cat[:,6], cat[:,7], cat[:,8]
        self.l68, self.u68, self.l95 = cat[:,9], cat[:,10], cat[:,11]
        self.u95, self.l99, self.u99 = cat[:,12], cat[:,13], cat[:,14]
        self.nfilt, self.q_z, self.z_peak = cat[:,15], cat[:,16], cat[:,17]
        self.peak_prob, self.z_mc = cat[:,18], cat[:,19]


def readzout(name):
    '''
    #  A quick and dirty script that reads in EAZY
    #  zout files into a named tuple structure.
    ''' 
    dat = open(name, 'r')
    header = dat.readline()
    header_params = header[1:].split(None)
    del dat

    custom_catalog = namedtuple('custom_catalog', header_params)
    catalog = custom_catalog(*np.loadtxt(name, unpack=1))
    return catalog


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ FAST CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class fastcat:
    def __init__(self, cat):
        self.id, self.zphot, self.ltau = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2], 
        self.metal, self.lage, self.Av = cat[:,3], cat[:,4], cat[:,5], 
        self.lmass, self.lsfr, self.lssfr = cat[:,6], cat[:,7], cat[:,8], 
        self.la2t, self.chi2 = cat[:,9], cat[:,10]

class fastcat_full:
    def __init__(self, cat):
        self.id, self.zphot, self.l68_z = np.array([int(i) for i in cat[:,0]]), cat[:,1], cat[:,2]
        self.u68_z, self.ltau, self.l68_ltau = cat[:,3], cat[:,4], cat[:,5]
        self.u68_ltau, self.metal, self.l68_metal = cat[:,6], cat[:,7], cat[:,8]
        self.u68_metal, self.lage, self.l68_lage = cat[:,9], cat[:,10], cat[:,11]
        self.u68_lage, self.Av, self.l68_Av = cat[:,12], cat[:,13], cat[:,14]
        self.u68_Av, self.lmass, self.l68_lmass = cat[:,15], cat[:,16], cat[:,17]
        self.u68_lmass, self.lsfr, self.l68_lsfr = cat[:,18], cat[:,19], cat[:,20]
        self.u68_lsfr, self.lssfr, self.l68_lssfr = cat[:,21], cat[:,22], cat[:,23]
        self.u68_lssfr, self.la2t, self.l68_la2t = cat[:,24], cat[:,25], cat[:,26]
        self.u68_la2t, self.chi2 = cat[:,27], cat[:,28]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UVJ CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class uvj:
    def __init__(self, uflux, vfluxes, jflux):
        self.uflux = uflux
        self.vfluxes = vfluxes
        self.jflux = jflux
        self.uv = -2.5*np.log10( uflux / vfluxes[0] )
        self.vj = -2.5*np.log10( vfluxes[1] / jflux )

class uvj2:
    ###  This class is for when we started running EAZY
    ###  individually for each restframe filter.
    def __init__(self, uflux, vflux, jflux):
        self.uflux = uflux
        self.vfluxes = vflux
        self.jflux = jflux
        self.uv = -2.5*np.log10( uflux / vflux )
        self.vj = -2.5*np.log10( vflux / jflux )


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LIR CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class lircat:
    def __init__(self, cat):
        cat2 = np.loadtxt(cat)
#        self.id, self.zphot, self.lir_ce01 = cat2[:,0].astype(int), cat2[:,1], cat2[:,2]
#        self.sf_ce01, self.lir_w08, self.sf_w08 = cat2[:,3], cat2[:,4], cat2[:,5]
#        self.lir_best_ce01, self.best_id, self.sf_best_ce01 = cat2[:,6], cat2[:,7], cat2[:,8]
       
        self.id, self.zphot = cat2[:,0], cat2[:,1]
        self.lir_mips_ce01, self.sf_mips_ce01 = cat2[:,2], cat2[:,3]
        self.lir_mips_w08, self.sf_mips_w08 = cat2[:,4], cat2[:,5]
        self.lir_pacs_ce01, self.sf_pacs_ce01 = cat2[:,6], cat2[:,7]
        self.lir_pacs_w08, self.sf_pacs_w08 = cat2[:,8], cat2[:,9]
        self.lir_mipspacs_ce01, self.sf_mipspacs_ce01 = cat2[:,10], cat2[:,11]
        self.lir_ce01, self.sf_ce01 = cat2[:,10], cat2[:,11]
        self.lir_mipspacs_w08, self.sf_mipspacs_w08 = cat2[:,12], cat2[:,13]
        self.lir_w08, self.sf_w08 = cat2[:,12], cat2[:,13]
        self.lir_indi_ce01, self.tempid_indi_ce01, self.sf_indi_ce01 = cat2[:,14], cat2[:,15], cat2[:,16]
        self.lir_best_ce01, self.best_id, self.sf_best_ce01 = cat2[:,14], cat2[:,15], cat2[:,16]
#        self.lir_mode_ce01, self.sf_mode_ce01 = cat2[:,17], cat2[:,18]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SFR CATALOGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class sfrcat_cdfs:
    def __init__(self, cat):
        self.id, self.zphot, self.f24 = cat[:,0].astype(int), cat[:,1], cat[:,2]
        self.e24, self.f70, self.e70 = cat[:,3], cat[:,4], cat[:,5]
        self.f100, self.e100, self.f160 = cat[:,6], cat[:,7], cat[:,8]
        self.e160, self.lir_w08, self.lir_ce01 = cat[:,9], cat[:,10], cat[:,11]
        self.lir_best, self.luv_2000 = cat[:,12], cat[:,13]
        self.luv_2800, self.sfr_lir = cat[:,14], cat[:,15]
        self.sfr_luv, self.firflag = cat[:,16], cat[:,17].astype(int)

        self.fir = np.array(zip(self.f24, self.f70, self.f100, self.f160))
        self.e_fir = np.array(zip(self.e24, self.e70, self.e100, self.e160))


class sfrcat_cosmos:
   def __init__(self, cat):
        self.id, self.zphot, self.f24 = cat[:,0].astype(int), cat[:,1], cat[:,2]
        self.e24 = cat[:,3]
        self.f100, self.e100, self.f160 = cat[:,4], cat[:,5], cat[:,6]
        self.e160, self.lir_w08, self.lir_ce01 = cat[:,7], cat[:,8], cat[:,9]
        self.lir_best, self.luv_2000 = cat[:,10], cat[:,11]
        self.luv_2800, self.sfr_lir = cat[:,12], cat[:,13]
        self.sfr_luv, self.firflag = cat[:,14], cat[:,15].astype(int)

        self.fir = np.array(zip(self.f24, self.f100, self.f160))
        self.e_fir = np.array(zip(self.e24, self.e100, self.e160))


class sfrcat_uds:
   def __init__(self, cat):
        self.id, self.zphot, self.f24 = cat[:,0].astype(int), cat[:,1], cat[:,2]
        self.e24 = cat[:,3]
        self.f100, self.e100, self.f160 = cat[:,4], cat[:,5], cat[:,6]
        self.e160, self.lir_w08, self.lir_ce01 = cat[:,7], cat[:,8], cat[:,9]
        self.lir_best, self.luv_2000 = cat[:,10], cat[:,11]
        self.luv_2800, self.sfr_lir = cat[:,12], cat[:,13]
        self.sfr_luv, self.firflag = cat[:,14], cat[:,15].astype(int)

        self.fir = np.array(zip(self.f24, self.f100, self.f160))
        self.e_fir = np.array(zip(self.e24, self.e100, self.e160))


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RADIO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class radiocat:
    def __init__(self, cat):
        self.id, self.z_peak = cat[:,0], cat[:,1]
        self.F_14, self.E_14 = cat[:,2], cat[:,3]
        self.L_14, self.RSFR = cat[:,4], cat[:,5]
        self.R_Flag = cat[:,6]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ X-RAY ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class xraycat:
    def __init__(self, cat):
        self.id = cat[:,0].astype(int)
        self.f_x = cat[:,1]
        self.l_x = cat[:,2]
        self.HR = cat[:,3]


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SCRIPTS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~


def read_cat_ks_cdfs(cat): return cat_ks_cdfs_0_4_8(np.loadtxt(cat))
def read_cat_ks_cosmos(cat): return cat_ks_cosmos_0_10_7(np.loadtxt(cat))
def read_cat_ks_uds(cat): return cat_ks_uds_0_0_15(np.loadtxt(cat))

def read_cat_ks_cdfs_1_5_1(cat): return cat_ks_cdfs_1_5_1(np.loadtxt(cat))
def read_cat_ks_cosmos_1_2_5(cat): return cat_ks_cosmos_1_2_5(np.loadtxt(cat))
def read_cat_ks_uds_1_3_1(cat): return cat_ks_uds_1_3_1(np.loadtxt(cat))
    
def read_cat_ks_cdfs_1_5_3(cat): return cat_ks_cdfs_1_5_3(np.loadtxt(cat))
def read_cat_ks_cosmos_1_2_7(cat): return cat_ks_cosmos_1_2_7(np.loadtxt(cat))
def read_cat_ks_uds_1_4_1(cat): return cat_ks_uds_1_4_1(np.loadtxt(cat))
    
def read_cat_ks_cdfs_FIR(cat): return cat_ks_cdfs_0_4_8_FIR(np.loadtxt(cat))
def read_cat_ks_cosmos_FIR(cat): return cat_ks_cosmos_0_10_7_FIR(np.loadtxt(cat))
def read_cat_ks_uds_FIR(cat): return cat_ks_uds_0_0_15_FIR(np.loadtxt(cat))

def read_cat_f160w_cdfs(cat): return cat_f160w_cdfs(np.loadtxt(cat))
def read_cat_f160w_cosmos(cat): return cat_f160w_cosmos(np.loadtxt(cat))
def read_cat_f160w_uds(cat): return cat_f160w_uds(np.loadtxt(cat))

def read_cat_nmbs_cosmos_5_1(cat): return cat_cosmos_nmbs_5_1(np.loadtxt(cat))
def read_cat_nmbs_aegis_5_1(cat): return cat_aegis_nmbs_5_1(np.loadtxt(cat))


def read_eazycat(name): return eazycat( np.loadtxt(name) )
def read_fastcat(name): return fastcat( np.loadtxt(name) )
def read_fastcat_full(name): return fastcat_full( np.loadtxt(name) )


def read_uvj( uv_cat, vj_cat ):
    uvcat = np.loadtxt(uv_cat)
    vjcat = np.loadtxt(vj_cat)
    return uvj( uvcat[:,5], np.array([uvcat[:,6],vjcat[:,5]]) , vjcat[:,6] )

def read_uvj2( u_cat, v_cat, j_cat ):
    ###  This class is for when we started running EAZY
    ###  individually for each restframe filter.
    ucat = np.loadtxt(u_cat)
    vcat = np.loadtxt(v_cat)
    jcat = np.loadtxt(j_cat)
    return uvj2( ucat[:,5], vcat[:,5] , jcat[:,5] )


def read_lircat(cat): return lircat(cat)

def read_sfrcat_cdfs(cat): return sfrcat_cdfs(np.loadtxt(cat))
def read_sfrcat_cosmos(cat): return sfrcat_cosmos(np.loadtxt(cat))
def read_sfrcat_uds(cat): return sfrcat_uds(np.loadtxt(cat))

def read_radiocat(cat): return radiocat(np.loadtxt(cat))

def read_xraycat(cat): return xraycat(np.loadtxt(cat))
